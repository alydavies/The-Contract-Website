# Generated by Django 3.2.20 on 2024-02-02 16:36

from django.db import migrations, models

CRAFTING_ARTIFACT = 'ARTIFACT_CRAFTING'

def reverse_migrate_earned_exp(apps, schema_editor):
    pass


def migrate_update_earned_exp(apps, schema_editor):
    CraftingEvent = apps.get_model('crafting', 'CraftingEvent')
    for event in CraftingEvent.objects.filter(relevant_power__modality__crafting_type=CRAFTING_ARTIFACT).all():
        print("examining event ", event.pk)
        total_cost = 0
        for crafted_artifact in event.craftedartifact_set.filter():
            artifact = crafted_artifact.relevant_artifact
            if artifact.is_consumable:
                raise ValueError("Looking at consumable")
            power_full = event.relevant_power_full
            power = event.relevant_power
            last_power = artifact.power_set.filter(pub_date__lt=power.pub_date, parent_power=power_full).order_by("pub_date").last()
            if crafted_artifact.quantity_free > 0:
                cost=0
            elif last_power is not None:
                if last_power.pk == power.pk:
                    raise ValueError("Previous power is same as current")
                delta = power.gift_cost - last_power.gift_cost
                cost = delta + 1 if delta > 0 else 0
            else:
                cost = power.gift_cost + 1
            total_cost += cost
        if total_cost != event.total_exp_spent:
            print("Found busted event, fixing")
            print("Artifacts: ", event.artifacts.values_list("pk", flat=True))
            print("Character: ", event.relevant_character.name)
            print("old cost: ", event.total_exp_spent)
            print("new cost: ", total_cost)
            event.total_exp_spent = total_cost
            event.save()
    print("Done")



class Migration(migrations.Migration):

    dependencies = [
        ('crafting', '0002_auto_20220421_2049'),
    ]

    operations = [
        migrations.RunPython(migrate_update_earned_exp, reverse_migrate_earned_exp),
    ]
